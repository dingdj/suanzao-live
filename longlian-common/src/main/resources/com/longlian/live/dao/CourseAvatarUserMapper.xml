<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longlian.live.dao.CourseAvatarUserMapper">
  <resultMap id="BaseResultMap" type="com.longlian.model.CourseAvatarUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="COURSE_ID" jdbcType="BIGINT" property="courseId" />
    <result column="USER_ID" jdbcType="BIGINT" property="userId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, COURSE_ID, USER_ID, CREATE_TIME
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from course_avatar_user
    where ID = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from course_avatar_user
    where ID = #{id}
  </delete>
  <insert id="insert" parameterType="com.longlian.model.CourseAvatarUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_avatar_user (COURSE_ID, USER_ID, CREATE_TIME)
    values (#{courseId}, #{userId}, #{createTime})
  </insert>
  <insert id="insertSelective" parameterType="com.longlian.model.CourseAvatarUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_avatar_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="@Ognl@isNotEmpty(courseId)">
        COURSE_ID,
      </if>
      <if test="@Ognl@isNotEmpty(userId)">
        USER_ID,
      </if>
      <if test="@Ognl@isNotEmpty(createTime)">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="@Ognl@isNotEmpty(courseId)">
        #{courseId},
      </if>
      <if test="@Ognl@isNotEmpty(userId)">
        #{userId},
      </if>
      <if test="@Ognl@isNotEmpty(createTime)">
        #{createTime},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longlian.model.CourseAvatarUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update course_avatar_user
    <set>
      <if test="@Ognl@isNotEmpty(courseId)">
        COURSE_ID = #{courseId},
      </if>
      <if test="@Ognl@isNotEmpty(userId)">
        USER_ID = #{userId},
      </if>
      <if test="@Ognl@isNotEmpty(createTime)">
        CREATE_TIME = #{createTime},
      </if>
    </set>
    where ID = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longlian.model.CourseAvatarUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update course_avatar_user
    set COURSE_ID = #{courseId},
      USER_ID = #{userId},
      CREATE_TIME = #{createTime}
    where ID = #{id}
  </update>

  <insert id="importCourseAvatarUser" parameterType="java.util.List">
    insert into course_avatar_user (COURSE_ID, USER_ID, CREATE_TIME) values
    <foreach collection="list" item="item" separator=",">
      (#{item.courseId}, #{item.userId}, #{item.createTime})
    </foreach>
  </insert>
  <delete id="deleteCourseAvatarUser"  >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from course_avatar_user
    where COURSE_ID = #{courseId} AND USER_ID in (${userIds})
  </delete>

  <select id="getUsersByCount" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/> FROM course_avatar_user
    WHERE  COURSE_ID = #{courseId} order by ID limit #{count}
  </select>

  <delete id="deleteByCourse"  >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from course_avatar_user
    where COURSE_ID = #{courseId}
  </delete>
  <select id="find" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/> FROM course_avatar_user
    WHERE  COURSE_ID = #{courseId}  AND USER_ID = #{userId}
  </select>

</mapper>