<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longlian.live.dao.VideoMapper">
	<resultMap id="BaseResultMap" type="com.longlian.model.Video">
		<id column="ID" jdbcType="BIGINT" property="id" />
		<result column="CREATE_USER_ID" jdbcType="BIGINT" property="createUserId" />
		<result column="COURSE_ID" jdbcType="BIGINT" property="courseId" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
		<result column="SIZE" jdbcType="BIGINT" property="size" />
		<result column="VIDEO_ADDRESS" jdbcType="VARCHAR" property="videoAddress" />
		<result column="IMG_ADDRESS" jdbcType="VARCHAR" property="imgAddress" />
		<result column="DURATION" property="duration" />
		<result column="CONVERT_STATUS" property="convertStatus" />
		<result column="CONVERT_ADDRESS" property="convertAddress" />
		<result column="WIDTH" property="width" />
		<result column="HEIGHT" property="height" />
		<result column="FAIL_REASON" property="failReason" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, CREATE_USER_ID, COURSE_ID, CREATE_TIME, SIZE, VIDEO_ADDRESS,
		IMG_ADDRESS,
		DURATION, CONVERT_STATUS,
		 CONVERT_ADDRESS , WIDTH , HEIGHT , FAIL_REASON
	</sql>

	<insert id="insert" parameterType="com.longlian.model.Video">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into video (CREATE_USER_ID, COURSE_ID, CREATE_TIME, VIDEO_ADDRESS, CONVERT_STATUS , SIZE , DURATION ,IMG_ADDRESS , CONVERT_ADDRESS, WIDTH , HEIGHT , FAIL_REASON)
		values (#{createUserId}, #{courseId}, #{createTime},#{videoAddress}, #{convertStatus}, #{size},#{duration},#{imgAddress},#{convertAddress} ,#{width} , #{height} , #{failReason})
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.longlian.model.Video">
		update video
		<set>
			<if test="@Ognl@isNotEmpty(imgAddress)">
				IMG_ADDRESS = #{imgAddress},
			</if>
			<if test="@Ognl@isNotEmpty(videoAddress)">
				VIDEO_ADDRESS = #{videoAddress},
			</if>
			<if test="@Ognl@isNotEmpty(convertAddress)">
				CONVERT_ADDRESS = #{convertAddress},
			</if>
			<if test="@Ognl@isNotEmpty(convertStatus)">
				CONVERT_STATUS = #{convertStatus},
			</if>
			<if test="@Ognl@isNotEmpty(duration)">
				DURATION = #{duration},
			</if>
			<if test="@Ognl@isNotEmpty(size)">
				SIZE = #{size},
			</if>
			<if test="width > 0">
				WIDTH = #{width},
			</if>
			<if test="height > 0">
				HEIGHT = #{height},
			</if>
			<if test="@Ognl@isNotEmpty(failReason)">
				FAIL_REASON = #{failReason},
			</if>
		</set>
		where ID = #{id}
	</update>
	<update id="updateVideoAddress">
		update video set CONVERT_STATUS = '0',IMG_ADDRESS = '',VIDEO_ADDRESS = #{videoAddress},CONVERT_ADDRESS = '',DURATION = 0,SIZE =0,WIDTH = 0,HEIGHT =0
			where COURSE_ID = #{id} and CONVERT_ADDRESS != #{videoAddress}
	</update>

	<select id="findByUrl" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/> from video where VIDEO_ADDRESS = #{address}
	</select>
	<select id="getAllNoConvertVideo" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/> from video where CONVERT_STATUS in ('0','2')
	</select>


</mapper>
