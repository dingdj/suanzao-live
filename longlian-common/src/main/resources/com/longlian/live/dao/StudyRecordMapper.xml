<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longlian.live.dao.StudyRecordMapper">
  <resultMap id="BaseResultMap" type="com.longlian.model.StudyRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="COURSE_ID" jdbcType="BIGINT" property="courseId" />
    <result column="APP_ID" jdbcType="BIGINT" property="appId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="REVIEW" jdbcType="VARCHAR" property="review" />
    <result column="SERIES_COURSE_ID" jdbcType="BIGINT" property="seriesCourseId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, COURSE_ID, APP_ID, CREATE_TIME, REVIEW,SERIES_COURSE_ID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from study_record
    where ID = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from study_record
    where ID = #{id}
  </delete>
  <insert id="insert" parameterType="com.longlian.model.StudyRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into study_record (COURSE_ID, APP_ID, CREATE_TIME, REVIEW,SERIES_COURSE_ID)
    values (#{courseId}, #{appId}, #{createTime}, #{review},#{seriesCourseId})
  </insert>
  <insert id="insertSelective" parameterType="com.longlian.model.StudyRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into study_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="@Ognl@isNotEmpty(courseId)">
        COURSE_ID,
      </if>
      <if test="@Ognl@isNotEmpty(appId)">
        APP_ID,
      </if>
      <if test="@Ognl@isNotEmpty(createTime)">
        CREATE_TIME,
      </if>
      <if test="@Ognl@isNotEmpty(review)">
        REVIEW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="@Ognl@isNotEmpty(courseId)">
        #{courseId},
      </if>
      <if test="@Ognl@isNotEmpty(appId)">
        #{appId},
      </if>
      <if test="@Ognl@isNotEmpty(createTime)">
        #{createTime},
      </if>
      <if test="@Ognl@isNotEmpty(review)">
        #{review},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longlian.model.StudyRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update study_record
    <set>
      <if test="@Ognl@isNotEmpty(courseId)">
        COURSE_ID = #{courseId},
      </if>
      <if test="@Ognl@isNotEmpty(appId)">
        APP_ID = #{appId},
      </if>
      <if test="@Ognl@isNotEmpty(createTime)">
        CREATE_TIME = #{createTime},
      </if>
      <if test="@Ognl@isNotEmpty(review)">
        REVIEW = #{review},
      </if>
      <if test="@Ognl@isNotEmpty(seriesCourseId)">
        SERIES_COURSE_ID = #{seriesCourseId}
      </if>
    </set>
    where ID = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longlian.model.StudyRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update study_record
    set COURSE_ID = #{courseId},
      APP_ID = #{appId},
      CREATE_TIME = #{createTime},
      REVIEW = #{review},
    SERIES_COURSE_ID = #{seriesCourseId}
    where ID = #{id}
  </update>
  <select id="findByUserIdAndCourseId" resultType="java.lang.Long">
    SELECT count(1) FROM study_record WHERE  APP_ID = #{appId} and  COURSE_ID= #{courseId}

  </select>

  <select id="findByCourseId" resultType="java.lang.Long">
    SELECT count(DISTINCT APP_ID) FROM study_record WHERE   COURSE_ID= #{courseId}
  </select>
    <select id="getCourseStudyUser" resultType="java.util.Map">
      SELECT
          j.APP_ID,
          j.CREATE_TIME,
          u.NAME,
          u.PHOTO,
          u.IS_VIRTUAL_USER
      FROM
          study_record j
      LEFT JOIN app_user u ON u.id = j.APP_ID
      WHERE
          COURSE_ID = #{courseId}
      AND j.REVIEW = '0'
    </select>

</mapper>