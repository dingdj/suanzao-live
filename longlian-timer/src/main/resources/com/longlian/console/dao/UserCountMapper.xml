<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longlian.console.dao.UserCountMapper">
  <resultMap id="BaseResultMap" type="com.longlian.model.UserCount">
    <id column="ID" jdbcType="BIGINT" property="id"/>
    <result column="COUNT_TIME" jdbcType="VARCHAR" property="countTime"/>
    <result column="MACHINE_TYPE" jdbcType="VARCHAR" property="machineType"/>
    <result column="TYPE" jdbcType="INTEGER" property="type"/>
    <result column="COUNT" jdbcType="BIGINT" property="count"/>
    <result column="OBJECT_ID" jdbcType="BIGINT" property="objectId"/>
    <result column="OBJECT_VALUE" jdbcType="VARCHAR" property="objectValue"/>
  </resultMap>

  <sql id="Base_Column_List">
    ID, COUNT_TIME, MACHINE_TYPE ,TYPE, COUNT , OBJECT_ID , OBJECT_VALUE
  </sql>

  <select id="getCountListForPage" resultType="Map">
      select t1.count_time countTime,t1.ucount ucount,t2.tcount tcount,t3.pvcount pvcount,t4.account account,t5.apcount apcount,
              t6.tpcount tpcount,t7.clRate clRate,t8.auplRate auplRate
      from
      (select count_time ,COUNT ucount from user_count where type=105 ) t1,
      (select count_time ,COUNT tcount from user_count where type=106 ) t2 ,
      (select count_time ,COUNT pvcount from user_count where type=112 ) t3 ,
      (select count_time ,COUNT account from user_count where type=110) t4 ,
      (select count_time ,COUNT apcount from user_count where type=109 ) t5,
      (select count_time ,COUNT tpcount from user_count where type=108) t6 ,
      (select count_time,COUNT clRate from user_count where type=113 ) t7 ,
      (select count_time,COUNT auplRate from user_count where type=114) t8
      where 1=1 and t1.count_time=t2.count_time and t2.count_time=t3.count_time and t3.count_time=t4.count_time
      and t4.count_time=t5.count_time and t5.count_time=t6.count_time and t6.count_time=t7.count_time and t8.count_time=t7.count_time
    <if test="@Ognl@isNotEmpty(map.beginTime)">
      AND t1.count_time &gt;'${map.beginTime}'
    </if>
    <if test="@Ognl@isNotEmpty(map.endTime)">
      AND t1.count_time &lt;'${map.endTime}'
    </if>
    <if test="@Ognl@isEmpty(map.orderType)">
      order by countTime desc
    </if>



  </select>
  <select id="getUserCountPage" resultType="Map">
    SELECT
    u.ID as id ,u.COUNT_TIME as countTime , u.MACHINE_TYPE as machineType , u.TYPE as type,u.COUNT as count
    FROM user_count u
    <where>
      <if test="@Ognl@isNotEmpty(machineType)">
         u.MACHINE_TYPE=#{machineType}
      </if>
    </where>
    ORDER BY u.ID DESC
  </select>


  <insert id="insert" parameterType="com.longlian.model.UserCount">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_count (COUNT_TIME, MACHINE_TYPE, TYPE, COUNT , OBJECT_ID, OBJECT_VALUE)
    values (#{countTime}, #{machineType}, #{type}, #{count} , #{objectId} , #{objectValue})
  </insert>
  <select id="selectByUserCount" resultMap="BaseResultMap" parameterType="com.longlian.model.UserCount">
  select
  <include refid="Base_Column_List" />
  from user_count
  <where>
    1=1
    <if test="@Ognl@isNotEmpty(countTime)">
      AND COUNT_TIME = #{countTime}
    </if>
    <if test="@Ognl@isNotEmpty(machineType)">
      AND  MACHINE_TYPE =#{machineType}
    </if>
    <if test="@Ognl@isNotEmpty(type)">
      AND  TYPE = #{type}
    </if>
  </where>
</select>


<delete id="deleteById">
    delete FROM user_count
    WHERE id = #{id}
  </delete>

<!-- 根据时间查询统计结果-->
  <select id="getCountUser" resultType="long">
    SELECT IF(SUM(COUNT) IS NULL ,'0',SUM(COUNT)) AS count FROM user_count
    <where>
      (COUNT_TIME BETWEEN #{start} AND #{end})
      <if test="@Ognl@isNotEmpty(type)">
        AND TYPE = #{type}
      </if>
    </where>
  </select>

  <select id="getUserCountDouble" resultType="java.math.BigDecimal">
    SELECT IF(SUM(COUNT) IS NULL ,'0',SUM(COUNT)) AS c FROM user_count
    <where>
      (COUNT_TIME BETWEEN #{start} AND #{end})
      <if test="@Ognl@isNotEmpty(type)">
        AND TYPE = #{type}
      </if>
    </where>
  </select>
  <select id="getCountChannelusing" resultMap="BaseResultMap">
    SELECT * FROM user_count
    <where>
      <if test="@Ognl@isNotEmpty(start) and  @Ognl@isNotEmpty(end)">
        (COUNT_TIME BETWEEN #{start} AND #{end})
      </if>
      <if test="@Ognl@isNotEmpty(type)">
        AND TYPE = #{type}
      </if>
    </where>
  </select>
   <!--站点-->
  <select id="getCountSite" resultType="map">
    select   c.count as count,
      c.COUNT_TIME as countTime
    from user_count c  where
    type = #{type}
    <if test="@Ognl@isNotEmpty(beginTime) and  @Ognl@isNotEmpty(endTime)">
      and  (c.COUNT_TIME BETWEEN #{beginTime} AND #{endTime})
    </if>
    order by c.COUNT_TIME
  </select>

  <!--pageUrl-->
  <select id="getCountPageUrl" resultType="map">
    SELECT
    c.count as count,
     c.COUNT_TIME as countTime
    FROM
    user_count c
    LEFT JOIN page_url u ON u.ID = c.OBJECT_ID
    WHERE
     type = #{type}
    <if test="@Ognl@isNotEmpty(beginTime) and  @Ognl@isNotEmpty(endTime)">
      and  (c.COUNT_TIME BETWEEN #{beginTime} AND #{endTime})
    </if>
    AND u.id = #{objectId} order by c.COUNT_TIME
  </select>

  <!--按钮点击次数-->
  <select id="getButtonClick" resultType="map">
  SELECT
    c.OBJECT_VALUE as objectValue ,
    c.COUNT_TIME as countTime,
    sum(c.count) as count
    FROM
    user_count c
    WHERE
    type = #{type}
    <if test="@Ognl@isNotEmpty(beginTime) and  @Ognl@isNotEmpty(endTime)">
      and  (c.COUNT_TIME BETWEEN #{beginTime} AND #{endTime})
    </if>
    AND c.OBJECT_VALUE like CONCAT('${objectValue}', '%')
    AND c.MACHINE_TYPE = ''
    GROUP BY
    c.COUNT_TIME,
    c.OBJECT_VALUE
  
  </select>

  <!--统计根据机器类型-->
  <select id="getButtonClickStatMachine" resultMap="BaseResultMap">
    select   <include refid="Base_Column_List" />
    from user_count   where
    type = #{type}
    and   COUNT_TIME = #{date}
    and OBJECT_VALUE = ${objectValue}
  </select>


  <!--统计根据下级-->
  <select id="getButtonClickStatChild" resultMap="BaseResultMap">
    select   <include refid="Base_Column_List" />
    from user_count   where
    type = #{type}
    and   COUNT_TIME = #{date}
    and OBJECT_VALUE like CONCAT('${objectValue}', '%')
    AND MACHINE_TYPE = ''
  </select>
</mapper>
